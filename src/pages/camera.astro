---
import { Image } from 'astro:assets'
import BaseLayout from '../layouts/BaseLayout.astro'
import picBG from '../assets/camera/pic-bg.webp'
import sceneBf from '../assets/camera/scene-before.webp'
import sceneAf from '../assets/camera/scene-after.webp'
---

<BaseLayout title='Camera | Oct 11th'>
	<section class='container'>
		<div class='controls'>
			<h1 class='heading'>Day 11 Camera</h1>
		</div>
		<div class='scene'>
			<Image src={picBG} alt='dark scene background.' loading='eager' />
			<div class='img-stack'>
				<button class='btn'>shutter</button>
				<Image
					class='sceneBf'
					src={sceneBf}
					alt='camera view finder.'
				/>
				<Image class='sceneAf' src={sceneAf} alt='image captured.' />
			</div>
		</div>
	</section>
</BaseLayout>

<style>
	.container {
		max-width: var(--max-content-w);
	}
	img {
		height: fit-content;
	}
	.scene {
		position: relative;
	}
	.img-stack {
		position: absolute;
		top: 0;
		width: 100%;
		height: 100%;
	}
	.btn {
		position: absolute;
		top: 20%;
		right: 16%;
		z-index: 100;
		transform: scale(0.5);
		padding: var(--spacing-s) var(--spacing-2xs);
		background-color: var(--lavender-400);
		border: none;
		border-radius: 100%;
		font-weight: 600;
		cursor: pointer;
		transition:
			background 0.2s,
			color 0.2s;
	}
	.btn:hover {
		background-color: var(--lavender-500);
	}

	.sceneBf,
	.sceneAf {
		position: absolute;
		bottom: 0;
		transform: scale(0.7);
		transition:
			opacity 0.4s ease-in-out,
			filter 0.6s ease-in-out;
	}
	.sceneBf {
		z-index: 50;
		opacity: 1;
	}
	.sceneBf.fade-out {
		opacity: 0;
		filter: blur(6px);
	}
	.sceneAf {
		z-index: 10;
		opacity: 0;
	}
	.sceneAf.fade-in {
		opacity: 1;
	}
	@media (min-width: 800px) {
		.btn {
			transform: scale(1);
			top: 26%;
			right: 24%;
		}
	}
</style>

<script>
	function setupTransparencyButton() {
		const btn = document.querySelector('.btn')
		const sceneBf = document.querySelector('.sceneBf')
		const sceneAf = document.querySelector('.sceneAf')

		btn?.addEventListener('click', () => {
			sceneBf?.classList.add('fade-out')
			sceneAf?.classList.add('fade-in')

			setTimeout(() => {
				sceneBf?.classList.remove('fade-out')
				sceneAf?.classList.remove('fade-in')
			}, 5000)
		})
	}

	setupTransparencyButton()

	document.addEventListener('astro:page-load', setupTransparencyButton)
</script>
